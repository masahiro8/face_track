{"version":3,"sources":["canvas.point.js","components/FaceDetect.jsx","config.js","util/vector.js","components/FaceDetectView.jsx","components/VideoCanvas.jsx","components/ClickDetect.jsx","components/scheduleDelegate.js","components/spline.js","components/ani.js","components/AssetLoader.jsx","App.js","serviceWorker.js","index.js","components/VideoCanvas.scss"],"names":["setPoint","canvas","pos","col","ctx","getContext","fillStyle","fillRect","x","y","FaceDetect","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pointlog","net","faceapi","state","faceDetect","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee2","_this2","wrap","_context2","prev","next","tinyFaceDetector","load","console","log","setInterval","_callee","_context","predict","stop","interval","apply","arguments","_predict","_callee3","options","result","_context3","abrupt","inputSize","scoreThreshold","video","withFaceLandmarks","sent","setState","react_default","createElement","Component","VIDEO_SIZE","width","height","INTERVAL","Math","floor","PARTS_INDEX","nose","leftEye","rightEye","shiftBase","b","p","toFixed","vectorLength","v","sqrt","dotProduct","crossProduct","distance","p1","p2","pow","FaceDetectView","tilt","deg","radian","star","BASE_PARTS","partsConfig","base","VECTOR_PARTS","vector","positions","Array","points","nextProps","landmarks","clearCanvas","lowpathFilter","detectTilt","showEyes","drawPoints","showPoints","drawParts","length","_","point","index","initPointRate","ref","setRef","begin","end","_end","_crossProduct","acos","PI","myPoint","_this3","_begin","_end_vec","vec_length","point_distance","rate","dot","vec","distanceFromCenter","cross","bool","vec2","cos","sin","asset","anies","id","selectedAssetId","img","sprite","_x","_y","setCanvas","transform","_myPoint","distanceFromEdge","abs","_dotProduct","cos_theta","_a","_b","dotDistance","math","rate_vec_point","rate_from_edge","_points","clearRect","_this4","_this5","step","parts","map","concat","getColor","e","rect","getBoundingClientRect","clientX","left","clientY","top","push","_this6","className","styles","onClick","addPoint","Video","media","selfRef","initCam","navigator","mediaDevices","getUserMedia","audio","facingMode","size","Promise","resolve","then","stream","srcObject","onloadedmetadata","catch","err","alert","setSelf","autoPlay","playsInline","Canvas","draw","context","drawImage","set","VideoImage","_Component3","_this7","_this8","VideoCanvas_Video","setVideo","VideoCanvas_Canvas","scheduleDelegate","isPlay","time_total","time_start","time_interval","time_current","time_prev","delegate","init","setCurrent","checkCallback","window","requestAnimationFrame","update","bind","time","d","callback","restart","Date","getTime","_current","random","Spline","c","num","prototype","constructor","sp","tmp","i","w","culc","t","dt","j","image","local","rot","move","rotate","emit","getCtx","save","_rot","_pos","cx","cy","setTransform","restore","aniSprite","_sprite","scheduler","frame","schedule","makeFrames","makeSplineFrames","playAnims","splineFrames","_anim","anim","rots","val","frames","list","n","r","current","getValuePerFrame","posx","posy","spx","spy","total_frames","_time","tiltFlag","reverse","_frames","_tilt","localMove","localRotate","theta","fpos","_pos_x","_pos_y","undefined","AssetLoader","ani","done","progress","images","assets","loadImage","src","path","Image","onload","total","view","Fragment","show","App","type","scale","schedules","start","position","overlay","setCallback","initCanvas","VideoCanvas_VideoImage","FaceDetect_FaceDetect","_faceapi$getMediaDime","resizedResults","res","forSize","jawOutline","getJawOutline","getNose","mouth","getMouth","getLeftEye","getRightEye","leftEyeBrow","getLeftEyeBrow","rightEyeBrow","getRightEyeBrow","getLandmarks","faceLandmarks","AssetLoader_AssetLoader","FaceDetectView_FaceDetectView","setOverlay","style","display","pause","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister","module","exports","overlayClickable","overlayCanvas","videoimage"],"mappings":"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","file":"static/js/main.bc22233c.chunk.js","sourcesContent":["import * as faceapi from \"face-api.js/dist/face-api.js\";\r\n\r\nexport const setPoint = ( canvas , pos  , col) =>{\r\n  const ctx = canvas.getContext(\"2d\");\r\n  ctx.fillStyle = col||\"#0ff\";\r\n  ctx.fillRect(pos.x,pos.y,4,4);\r\n}\r\n\r\nexport const getLandmarks = (landmarks) => {\r\n  const jawOutline = landmarks.getJawOutline();\r\n  const nose = landmarks.getNose();\r\n  const mouth = landmarks.getMouth();\r\n  const leftEye = landmarks.getLeftEye();\r\n  const rightEye = landmarks.getRightEye();\r\n  const leftEyeBrow = landmarks.getLeftEyeBrow();\r\n  const rightEyeBrow = landmarks.getRightEyeBrow();\r\n  return {\r\n    nose:nose,\r\n    mouth:mouth,\r\n    leftEye:leftEye,\r\n    rightEye:rightEye,\r\n    leftEyeBrow:leftEyeBrow,\r\n    rightEyeBrow:rightEyeBrow,\r\n    jawOutline:jawOutline,\r\n  }\r\n}\r\n\r\nexport const resizeCanvasAndResults = (dimensions, canvas, results) => {\r\n  const { width, height } = dimensions instanceof HTMLVideoElement\r\n    ? faceapi.getMediaDimensions(dimensions)\r\n    : dimensions\r\n  canvas.width = width\r\n  canvas.height = height\r\n\r\n  // resize detections (and landmarks) in case displayed image is smaller than\r\n  // original size\r\n  return results.map(res => res.forSize(width, height))\r\n}\r\n\r\nexport const drawDetections = (dimensions, canvas, detections)=> {\r\n  console.log(\"drawDetections\" ,detections);\r\n  const resizedDetections = resizeCanvasAndResults(dimensions, canvas, detections)\r\n  faceapi.drawDetection(canvas, resizedDetections)\r\n}\r\n\r\nexport const drawLandmarks = (dimensions, canvas, results, withBoxes = true) => {\r\n  \r\n  const resizedResults = resizeCanvasAndResults(dimensions, canvas, results)\r\n  console.log(\"drawLandmarks = \",resizedResults);\r\n  if (withBoxes) {\r\n    faceapi.drawDetection(canvas, resizedResults.map(det => det.detection))\r\n  }\r\n\r\n  const faceLandmarks = resizedResults.map(det => det.landmarks)\r\n  const drawLandmarksOptions = {\r\n    lineWidth: 2,\r\n    drawLines: true,\r\n    color: 'green'\r\n  }\r\n  faceapi.drawLandmarks(canvas, faceLandmarks, drawLandmarksOptions)\r\n}","import React, { Component } from \"react\";\nimport * as _ from \"lodash\";\nimport * as faceapi from \"face-api.js/dist/face-api.js\";\nimport { constant } from \"@tensorflow/tfjs-layers/dist/exports_initializers\";\nimport {setPoint,getLandmarks } from '../canvas.point';\n\n// tiny_face_detector options\nlet inputSize = 128\nlet scoreThreshold = 0.5\n\nexport class FaceDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = null;\n    this.pointlog = null;\n    this.net = new faceapi.FaceLandmark68TinyNet();\n    this.state = {\n      faceDetect: {},\n    };\n  }\n\n  async componentDidMount() {\n\n    //必要なモデルのロード\n    await faceapi.nets.tinyFaceDetector.load('models/face/');\n    await faceapi.loadFaceLandmarkModel('models/face/');\n    console.log(\"load models\");\n    setInterval(async () => {\n      await this.predict();\n    }, this.props.interval);\n  }\n\n  async predict() {\n    if (!this.props.canvas) return;\n    //検出\n    let inputSize = 128;\n    let scoreThreshold = 0.5;\n    const options = new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })\n    const result = await faceapi.detectSingleFace(this.props.video, options).withFaceLandmarks();\n    //console.log(\"predict result\" ,result);\n    if (result) {\n      //console.log(\"result \" , result );\n      // const { width, height } = faceapi.getMediaDimensions(this.props.video);\n      // const resizedResults = [result].map(res => res.forSize(width, height));\n      this.setState({ faceDetect: result });\n      this.props.result(result);\n    }\n  }\n\n  render() {\n    return (\n      <div/>\n    );\n  }\n}","export const location = 'https://192.168.100.109:3000/';\n\nexport const VIDEO_SIZE = {\n  width:640,\n  height:480,\n}\nexport const INTERVAL =  Math.floor(1000/30);\n\n//追従するパーツ\nexport const PARTS_INDEX = {\n  nose :30,\n  leftEye :38,\n  rightEye :44,\n} //[30,38,44]; // 鼻 左目　右目","    //原点補正\n    export const shiftBase = ( b ,p ) =>{\n      return {x:(p.x-b.x).toFixed(2),y:(p.y-b.y).toFixed(2)};\n    }\n    //ベクトル長さ\n    export const vectorLength =(v)=>{\n      return Math.sqrt( v.x * v.x + v.y * v.y);\n      //return Math.pow( ( v.x * v.x ) + ( v.y * v.y ), 0.5 );\n    }\n    //内積\n    export const dotProduct = (a,b) =>{\n      return a.x * b.x + a.y * b.y;\n    }\n\n    //外積\n    export const crossProduct = ( p , v ) =>{\n      return p.x * v.y - v.x * p.y;\n    }\n\n    //ベクトルのなす角(ラジアン)\n    //http://www.sousakuba.com/Programming/gs_two_vector_angle.html\n    //https://qiita.com/vkgtaro/items/b2cd00f376c427cb9ea6\n    export const theta = ( a, b ) => {\n      const _a = vectorLength(a);\n      const _b = vectorLength(b);\n      return Math.cos(dotProduct(a,b) / ( _a * _b ));\n    }\n\n    //ベクトル座標 座標,ベクトル\n    export const vecPos = (p,v) => {\n      return {x:p.x/v,y:p.y*v};\n    }\n    //２点間の距離\n    export const distance = (p1, p2) => {\n      return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n    };\n\n    //原点(0,0)からx軸の傾き\n    export const tilt = ( a ) => {\n      return a.x / vectorLength(a);\n    }","import React, { Component } from \"react\";\nimport * as _ from 'lodash';\nimport math from 'mathjs';\nimport { VIDEO_SIZE } from '../config';\nimport * as vector from '../util/vector';\nimport {setPoint } from '../canvas.point';\nimport styles from './VideoCanvas.scss';\n\n\nexport class FaceDetectView extends Component {\n  constructor(props){\n    super(props);\n    this.canvas = null;\n    this.tilt = null;\n    this.deg = null;\n    this.radian = null;\n    this.star = null;\n\n    //検出対象のパーツ番号\n    this.BASE_PARTS = this.props.partsConfig.base;\n    this.VECTOR_PARTS = this.props.partsConfig.vector;\n\n    //ローパスフィルタ用\n    this.positions = Array.apply(null,new Array(68));\n    this.positions[this.VECTOR_PARTS] = {x:0,y:0};\n    this.positions[this.BASE_PARTS] = {x:0,y:0};\n\n    this.state ={\n      points:[],\n      tilt:null,\n    };\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.landmarks) {\n      this.clearCanvas();\n\n      //平均化ローパスフィルタ\n      if( this.props.positions ) {\n        this.positions[this.VECTOR_PARTS] = this.lowpathFilter(this.props.positions[this.VECTOR_PARTS] , nextProps.positions[this.VECTOR_PARTS]);\n        this.positions[this.BASE_PARTS]   = this.lowpathFilter(this.props.positions[this.BASE_PARTS] , nextProps.positions[this.BASE_PARTS]);\n      }else {\n        //通常\n        this.positions[this.VECTOR_PARTS] = nextProps.positions[this.VECTOR_PARTS];\n        this.positions[this.BASE_PARTS]   = nextProps.positions[this.BASE_PARTS];\n      }\n\n      this.detectTilt(this.positions[this.VECTOR_PARTS],this.positions[this.BASE_PARTS]);\n\n      if(this.props.showEyes) this.drawPoints();\n      if(this.props.showPoints) this.drawParts();\n      if(this.state.points.length) {\n        _.each ( this.state.points ,  ( point , index ) =>{\n          this.initPointRate( point,index ,this.positions[this.BASE_PARTS] , this.positions[this.VECTOR_PARTS]);\n          this.setPoint(point,index ,this.positions[this.BASE_PARTS] , this.positions[this.VECTOR_PARTS]);\n        })\n      }\n    }\n  }\n\n  setCanvas ( ref ) {\n    this.canvas = ref;\n    this.props.setRef(ref);\n  }\n\n  //ローパス\n  lowpathFilter (prev,next) {\n    return {\n      x:(prev.x*0.9)+(next.x*0.1),\n      y:(prev.y*0.9)+(next.y*0.1),\n    }\n  }\n\n  //傾き検出\n  detectTilt ( begin , end ){\n    //原点をbeginとして補正\n    const _begin = { x:0 , y: 0};\n    const _end = vector.shiftBase( begin , end);\n    //なす角\n    const _crossProduct = vector.crossProduct(_end,{x:100,y:0});\n    this.radian = Math.acos(vector.tilt(_end));\n    this.deg = this.radian*(180/Math.PI);\n    this.tilt = _crossProduct<0?this.radian:-this.deg*(Math.PI/180);\n  }\n\n  //描画\n  setPoint ( myPoint, index , begin, end ) {\n\n    //原点をbeginとして補正\n    const _begin = { x:0 , y: 0};\n    const _end = vector.shiftBase( begin , end);\n    //ベクトル距離\n    const _end_vec = vector.vectorLength(_end);\n    //begin > end 距離\n    const vec_length = vector.distance(_begin , _end);\n    //線上の距離\n    const point_distance = vec_length*myPoint.rate.dot;\n    const vec = {\n      x : ( _begin.x+_end.x/_end_vec*point_distance ) + begin.x,\n      y : ( _begin.y+_end.y/_end_vec*point_distance ) + begin.y\n    }\n    //半径\n    const distanceFromCenter = vec_length*myPoint.rate.cross;\n    const r = myPoint.bool.cross?270:90;\n    const radian = r*Math.PI/180;\n    const vec2 = {\n      x:distanceFromCenter * Math.cos(radian) + vec.x,\n      y:distanceFromCenter * Math.sin(radian) + vec.y,\n    }\n    \n    //仮で画像描画\n    const asset = _.filter(this.props.anies,(asset)=>{return asset.id==this.props.selectedAssetId})\n    if( asset.length ) {\n      const img = asset[0].sprite.img;\n      let _x = vec2.x - (img.width/2);\n      let _y = vec2.y - (img.height/2);\n      asset[0].sprite.setCanvas(this.canvas).transform(\n        {x:_x , y:_y},\n        this.tilt,\n        -this.tilt,\n      );\n    }\n    setPoint( this.canvas , {x:vec2.x , y:vec2.y} , `rgba(255,255,255)`);\n  }\n\n  //初期値\n  initPointRate( myPoint, index , begin, end ) {\n\n    if ( myPoint.rate ) return;\n\n    //原点をbeginとして補正\n    const _begin = { x:0 , y: 0};\n    const _end = vector.shiftBase( begin , end);\n    const _myPoint = vector.shiftBase( begin ,myPoint.vector);\n    \n    //外積\n    const _crossProduct = vector.crossProduct(_end,_myPoint);\n    const distanceFromEdge = Math.abs(_crossProduct/vector.distance(_begin , _end));//頂点から|begin|endへの距離\n\n    //内積\n    const _dotProduct = vector.dotProduct(_end,_myPoint);// _dotProduct<0 -> 正\n    const cos_theta = vector.theta(_end,_myPoint);\n    const _theta = math.acos(cos_theta);//θ\n    const dotDistance = _theta*vector.vectorLength(_myPoint);//内積 -> 絶対値なので正負の判定を入れる必要がある\n\n    //割合\n    const vec_length = vector.distance(_begin , _end);\n    const rate_vec_point = dotDistance/vec_length;//正しい\n    const rate_from_edge = distanceFromEdge/vec_length;\n\n    //初期値を設定\n    let _points = this.state.points; \n    _points[index].bool = {\n      dot : _dotProduct<0?false:true,\n      cross : _crossProduct<0?true:false,\n    }\n    _points[index].rate = {\n      dot : _dotProduct<0?-rate_vec_point:rate_vec_point,\n      cross : rate_from_edge,\n    }\n    this.setState({\n      points:_points,\n    })\n  }\n\n  //キャンバスをクリア\n  clearCanvas () {\n    const context = this.canvas.getContext(\"2d\");\n    context.clearRect(0, 0, VIDEO_SIZE.width, VIDEO_SIZE.height);\n  }\n\n  //ベースパーツを描画\n  drawPoints (){\n    let index = 0;\n    _.each ( this.props.positions ,  point =>{\n      if(index == this.BASE_PARTS) {\n        setPoint( this.canvas , {x:point.x , y:point.y} , `rgba(255,0,0)`);\n      }\n      if(index == this.VECTOR_PARTS) {\n        setPoint( this.canvas , {x:point.x , y:point.y} , `rgba(0,255,0)`);\n      }\n      index++;\n    });\n  }\n\n  //検出したパーツ\n  drawParts () {\n    let landmarks = this.props.landmarks;\n    // パーツごとに色分け\n    const getColor = ( col , index ) =>{\n      let cols = [\n        `rgb(255,${index},${index})`,\n        `rgb(${index},255,${index})`,\n        `rgb(${index},${index},255)`,\n        `rgb(255,255,${index})`,//左目\n        `rgb(${index},255,255)`,//右目\n        `rgb(255,${index},255)`,\n        `rgb(${index},${index},${index})`,\n      ]\n      return cols[col];\n    }\n\n    let col = 0;//パーツインデックス\n    let index = 0;//パーツ内インデックス\n    let step = Math.floor(255/10);//色の段階\n    _.each(landmarks ,( parts , key )=> {\n      col++;\n      index = 0;\n      parts.map ( point => {\n        index++;\n        setPoint( this.canvas , {x:point.x , y:point.y} , getColor(col , index*step ));\n      })\n    })\n    \n  }\n\n  //ポイントを追加\n  addPoint (e) {\n    var rect = this.canvas.getBoundingClientRect();\n    // const x = (rect.width/2)+((rect.width/2) - (e.clientX - rect.left));\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    let _points = this.state.points;\n    _points.push({\n      vector:{x:x,y:y},\n      rate:null,\n    });\n    this.setState({\n      points : _points\n    });\n    //console.log(\"points \" , _points );\n  }\n\n  render(){\n    return(\n      <canvas\n        ref={ref => {\n          this.setCanvas(ref);\n        }}\n        width={VIDEO_SIZE.width}\n        height={VIDEO_SIZE.height}\n        className = {styles[\"overlayCanvas\"]}\n        onClick = {(e)=>{\n          this.addPoint(e);\n        }}\n      />\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport styles from './VideoCanvas.scss';\nimport {VIDEO_SIZE} from '../config';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.media = null;\n    this.selfRef = null;\n  }\n\n  async componentDidMount() {\n    await this.initCam();\n    //console.log(\"detect init\");\n  }\n\n  async initCam() {\n\n    // const stream = await navigator.mediaDevices.getUserMedia({ video: {} }) \n    this.media = navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: \"environment\",\n        width: this.props.size.width, \n        // height: this.props.size.height,\n      },\n    });\n\n    let p = new Promise( resolve =>{\n      this.media.then(stream => {\n        this.selfRef.srcObject = stream;\n        this.selfRef.onloadedmetadata = function(e) {\n          //console.log(\"Onload video\" , e);\n          resolve();\n        };\n      });\n      \n      this.media.catch(err => {\n        alert(err);\n      });\n    });\n\n    return p;\n    \n  }\n\n  render() {\n    return (\n      <video\n        ref={ref => {\n          this.selfRef = ref;\n          this.props.setSelf(ref);\n        }}\n        className=\"video\"\n        autoPlay\n        playsInline\n        width={VIDEO_SIZE.width}\n        height={VIDEO_SIZE.height}\n      />\n    );\n  }\n}\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.draw();\n    }, this.props.interval);\n  }\n\n  draw() {\n    if (!this.props.video || !this.props.canvas) {\n      return;\n    }\n    let rect = this.props.video.getBoundingClientRect();\n    var context = this.canvas.getContext(\"2d\");\n    this.canvas.width = this.props.size.width;\n    this.canvas.height = this.props.size.height;\n    context.drawImage(\n      this.props.video,0, 0,\n      this.props.size.width,\n      this.props.size.height);\n  }\n\n  render() {\n    return (\n      <canvas\n        ref={ref => {\n          this.canvas = ref;\n          this.props.set(ref);\n        }}\n        id={\"canvas\"}\n        className=\"canvas\"\n      />\n    );\n  }\n}\n\nexport class VideoImage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      video: null,\n      canvas: null,\n    };\n  }\n\n  setVideo(ref) {\n    if (this.state.video !== ref && ref) {\n      this.setState({ video: ref });\n      this.props.video(ref);\n    }\n  }\n\n  setCanvas(ref) {\n    if (this.state.canvas !== ref && ref) {\n      this.setState({ canvas: ref });\n      this.props.canvas(ref);\n    }\n  }\n\n  render(){\n    return(\n      <div className={styles[\"videoimage\"]}>\n        <Video\n          size = {this.props.size}\n          setSelf={ref => {\n            this.setVideo(ref);\n          }}\n        />\n        <Canvas\n          size = {this.props.size}\n          video={this.state.video}\n          set={ref => {\n            this.setCanvas(ref);\n          }}\n          interval={this.props.interval}\n        />\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport * as _ from 'lodash';\nimport math from 'mathjs';\nimport { VIDEO_SIZE } from '../config';\nimport * as vector from '../util/vector';\nimport {setPoint } from '../canvas.point';\nimport styles from './VideoCanvas.scss';\n\nexport class ClickDetect extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      points : [],\n    }\n  }\n\n  //ポイントを追加\n  click (e) {\n    var rect = this.props.canvas.getBoundingClientRect();\n    // const x = (rect.width/2)+((rect.width/2) - (e.clientX - rect.left));\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    let _points = this.state.points;\n    _points.push({\n      vector:{x:x,y:y},\n      rate:null,\n    });\n    this.setState({\n      points : _points\n    });\n    //console.log(\"points \" , _points );\n  }\n\n  render(){\n    return(\n      <div \n        className={styles['overlayClickable']}\n        onClick = {(e)=>{\n          this.click(e);\n        }}\n      >\n        { this.props.children }\n      </div>\n    )\n  }\n}","import * as _ from 'lodash';\nexport class scheduleDelegate {\n  constructor(){\n    this.isPlay = false;\n\n    this.time_total = null;\n    this.time_start =  null;\n    this.time_interval = null;\n    this.time_current = null;\n    this.time_prev = null;\n\n    this.delegate = [];\n    this.init();\n  }\n\n  init(){\n    //console.log(\"init schedule delegate\");\n  }\n\n  update () {\n    if( this.isPlay ) {\n      //ここに実装\n      this.setCurrent();\n      this.checkCallback(this.time_total);\n      // console.log(\"total = \", this.time_total/1000);\n    }\n    window.requestAnimationFrame(this.update.bind(this));\n  }\n\n  checkCallback(time) {\n    if(  !this.delegate.length ) return;\n    //コールバックを取り出す\n    let delegate = _.filter( this.delegate , ( value )=>{\n      return value.time == Math.floor(time/1000);\n    });\n    //コールバックを削除する\n    this.delegate = _.reject( this.delegate , ( value )=>{\n      return value.time == Math.floor(time/1000);\n    });\n    _.each ( delegate  , d =>{\n      d.callback();\n    })\n  }\n\n  start () {\n    this.time_total = 0;\n    this.restart();\n    this.update();\n  }\n\n  restart () {\n    this.time_start = new Date().getTime();\n    this.time_current = new Date().getTime();\n    this.time_prev = new Date().getTime();\n    this.time_interval = 0;\n    this.isPlay = true;\n  }\n\n  pause () {\n    this.isPlay = false;\n  }\n\n  /**\n   * 時間の更新\n   */\n  setCurrent() {\n    const _current =  new Date().getTime();\n    this.time_current = _current - this.time_start;\n    this.time_interval = _current  - this.time_prev;\n    this.time_total += this.time_interval;\n    this.time_prev = _current;\n  }\n\n  setCallback(  value  ) {\n    this.delegate.push({\n      time : value.time,\n      callback : value.callback,\n    })\n  }\n}","var cos    = Math.cos,\nsin    = Math.sin,\nabs    = Math.abs,\nPI     = Math.PI,\nfloor  = Math.floor,\nrandom = Math.random;\n \n export function Spline() {\n    this.a = [];\n    this.b = [];\n    this.c = [];\n    this.d = [];\n\n    this.num = 0;\n}\nSpline.prototype = {\n    constructor: Spline,\n    num: 0,\n    a: null,\n    b: null,\n    c: null,\n    d: null,\n    init: function (sp) {\n        var tmp;\n        var w = [];\n        var i;\n\n        this.num = sp.length - 1;\n        var num = this.num;\n\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n\n        // 3次多項式の0次係数(a)を設定\n        for(i = 0; i <= num; i++) {\n            a[i] = sp[i];\n        }\n\n        // 3次多項式の2次係数(c)を計算\n        c[0] = c[num] = 0.0;\n        for(i = 1; i < num; i++) {\n            c[i] = 3.0 * (a[i - 1] - 2.0 * a[i] + a[i + 1]);\n        }\n\n        // 左下を消す\n        w[0] = 0.0;\n        for(i = 1; i < num; i++) {\n            tmp = 4.0 - w[i - 1];\n            c[i] = (c[i] - c[i - 1]) / tmp;\n            w[i] = 1.0 / tmp;\n        }\n\n        // 右上を消す\n        for(i = num - 1; i > 0; i--) {\n            c[i] = c[i] - c[i + 1] * w[i];\n        }\n\n        // 3次多項式の1次係数(b)と3次係数(b)を計算\n        b[num] = d[num] = 0.0;\n        for (i = 0; i < num; i++) {\n            d[i] = (c[i + 1] - c[i]) / 3.0;\n            b[i] = a[i + 1] - a[i] - c[i] - d[i];\n        }\n    },\n\n    // 媒介変数(0～num - 1の実数）に対する値を計算\n    culc: function (t) {\n        var j = floor(t);\n        var dt;\n        var num = this.num;\n\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n\n        if (j < 0) {\n            j = 0;\n        }\n        else if (j >= num) {\n            j = num - 1; // 丸め誤差を考慮\n        }\n\n        dt = t - j;\n\n        return a[j] + (b[j] + (c[j] + d[j] * dt) * dt ) * dt;\n    }\n};","import * as _ from 'lodash';\nimport {scheduleDelegate} from \"./scheduleDelegate\";\nimport {Spline} from './spline';\n\nclass sprite {\n  constructor(){\n\n  }\n\n  init ( image ) {\n    this.local  = {\n      pos :{x:0,y:0},\n      rot : 0,\n    }\n    this.img = image;\n  }\n\n  getCtx () {\n    return this.canvas.getContext(\"2d\");\n  }\n\n  setCanvas ( canvas ) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    return this;\n  }\n\n  transform ( pos , rot ) {\n    this.move(pos).rotate(rot).emit();\n  }\n\n  move ( pos ) {\n    this.local.pos = pos;\n    return this;\n  }\n\n  rotate (  rot  ) {\n    this.local.rot = rot;\n    return this;\n  }\n\n  emit () {\n    const ctx = this.getCtx();\n    ctx.save();\n    const _rot = this.local.rot;\n    const _pos = this.local.pos;\n    \n    // 回転の中心位置を計算（画像の中心を回転中心にする）\n    const cx = _pos.x + this.img.width/2;\n    const cy = _pos.y + this.img.height/2;\n\n    // 画像を回転\n    ctx.setTransform(\n      Math.cos(_rot), \n      Math.sin(_rot), \n      -Math.sin(_rot), \n      Math.cos(_rot),\n      cx-cx*Math.cos(_rot)+cy*Math.sin(_rot),\n      cy-cx*Math.sin(_rot)-cy*Math.cos(_rot)\n    );\n    ctx.drawImage(this.img, _pos.x, _pos.y);\n    ctx.restore();\n    return this;\n  }\n}\n\nconst base_fps = 60;\n\nclass animOptimize {\n  /***\n   * 基準 fps = 60\n   * 1.再生時間から全フレーム数を算出\n   * 2.1フレームあたりの移動量\n   * 3.\n   * \n   * { pos {x:0,y:0} time:0.0 }\n   * { pos {x:0,y:60} time:2.0 }\n   * \n   * 1. 60 * 2.0 = 120.0\n   * 2. fps/120.0 = 移動量\n   * \n   */\n\n  constructor(){\n    this.fps = 0;\n    this.fps_prev  = new Date().getTime();\n    this.update();\n  }\n  \n  update () {\n    window.requestAnimationFrame(this.update.bind(this));\n    this.flatFps();\n  }\n   /**\n   * fps平均化\n   */\n  flatFps  () {\n    const _fps_current = new Date().getTime();\n    const time = _fps_current - this.fps_prev;\n    this.fps_prev = _fps_current;\n    const FPS = (1000/time).toFixed(1);\n    //console.log(\"fps \" , FPS , time);\n  }\n}\n\nconst range = (min, max) => {\n  const len  = max - min;\n  const rand = Math.random() * len;\n  return min + rand;\n}\n\n\nexport class aniSprite extends sprite {\n\n  constructor( value, image , scheduler){\n\n    super(image);\n    this.value = value;\n    this.scheduler = scheduler;\n    this.isPlay = true;\n\n    this.frame  = 0;\n\n    this.schedule = new scheduleDelegate();\n    //this.ftpOptimizer = new animOptimize();\n\n    this.init( image );\n    this.makeFrames();\n    this.makeSplineFrames();\n    this.update();\n\n  }\n\n  update () {\n    window.requestAnimationFrame(this.update.bind(this));\n    this.playAnims();\n  }\n\n  playAnims () {\n    if ( this.frame >= this.value.splineFrames.length )\n    { this.frame = 0; } else \n    { this.frame++; }\n  }\n\n  makeSplineFrames ( ) {\n\n    let  _anim =  this.value.anim;\n\n    const getValuePerFrame = ( current , next , frames , index )=>{\n      return current + ((( next - current ) /frames ) * index ) ;\n    }\n\n    let rots = [];\n    _anim.map(( val , index  ) => {\n      if( _anim[index+1] ) {\n        const _time = _anim[index+1].time - _anim[index].time;\n        const frames  = base_fps * _time;\n        const _frames = Array.apply(null,new Array(frames));\n        let list = _frames.map(( value  , n ) =>{\n          const r = getValuePerFrame(_anim[index].rot , _anim[index+1].rot,frames,n);\n          return { rot :Math.floor(r) };\n        })\n        rots = rots.concat(list);\n      }\n    })\n\n    if( _anim.length ==  1 ) {\n      rots[0] = { rot : _anim[0].rot };\n    }\n\n    //位置の曲線変換\n    let posx = [];\n    let posy = [];\n    _anim.map(( val ) =>{\n      posx.push(val.pos.x);\n      posy.push(val.pos.y);\n    })\n    const spx = new Spline();\n    const spy = new Spline();\n    spx.init(posx);\n    spy.init(posy);\n\n    this.value.splineFrames = [];\n    let total_frames = 0;\n    _anim.map(( val  ,index ) => {\n      if( _anim[index+1] ) {\n        const _time = _anim[index+1].time - _anim[index].time;\n        const frames  = base_fps * _time;\n        total_frames += frames;\n      }\n      index++;\n    })\n    \n    const total_frames_array = Array.apply( null , Array(total_frames));\n    let list = total_frames_array.map(( val , index  ) => {\n      const m = ((_anim.length-1)/total_frames);\n      const i = (m*index).toFixed(2);\n      const x = spx.culc( i );\n      const y = spy.culc( i );\n      return { index :index , pos :{x:x,y:y} };\n    });\n\n    if( this.value.tiltFlag ) list.reverse();//回転変換を使う場合はフレーム順を変える\n\n    this.value.splineFrames = list.map(( val  , index  ) =>{\n      return { index :val.index ,pos:val.pos  ,rot:rots[index].rot};\n    })\n    //console.log(\"this.value.splineFrames \" ,this.value.splineFrames);\n  }\n\n  /**\n   * フレーム数を確定\n   * とりあえずposだけ\n   */\n  makeFrames () {\n    const getValuePerFrame = ( current , next , frames , index )=>{\n      return (( next - current ) /frames ) * index ;\n    }\n\n    this.value.frames = [];\n    _.each( this.value.anim , ( val , index  ) => {\n      if( this.value.anim[index+1] ) {\n        const _time = this.value.anim[index+1].time - this.value.anim[index].time;\n        const frames  = base_fps * _time;\n        const _frames = new Array(frames);\n        let list = _.map( _frames , ( value , n ) =>{\n          const x = getValuePerFrame(this.value.anim[index].pos.x , this.value.anim[index+1].pos.x,frames,n);\n          const y = getValuePerFrame(this.value.anim[index].pos.y ,this.value.anim[index+1].pos.y,frames,n);\n          return { index :n , pos :{x:x,y:y} };\n        })\n        this.value.frames = this.value.frames.concat(list);\n      }else {\n        this.value.frames.push({index:1 , pos:this.value.anim[index].pos });\n      }\n    })\n  }\n\n  transform ( pos , tilt , deg ) {\n\n    let _pos = pos;\n    let _tilt = tilt;\n\n    _pos = this.localMove(pos , deg);\n    _tilt = this.localRotate(tilt );\n\n    //180° => ラジアン\n    if( !this.value.tiltFlag ) _tilt = 180*Math.PI/180;\n\n    this.move(_pos).rotate(_tilt).emit();\n  }\n\n  /**\n   * ローカル座標\n   * @param {*} pos \n   * @param {int} index\n   */\n  localMove ( pos , theta) {\n    \n    if( \n      !_.has(this.value,\"frames\") || \n      !this.value.splineFrames[this.frame]\n    ) return  pos;\n\n    const fpos = this.value.splineFrames[this.frame].pos;\n\n    //回転行列\n    const _pos_x =  (Math.cos(theta)* fpos.x) + (Math.sin(theta)* fpos.y );\n    const _pos_y =  (-1 * Math.sin(theta)* fpos.x) + (Math.cos(theta)* fpos.y );\n\n    if( !this.value.tiltFlag ) {\n      return {\n        x : pos.x + fpos.x,\n        y : pos.y + fpos.y\n      }\n    } else  {\n      return {\n        x : pos.x + _pos_x,\n        y : pos.y + _pos_y\n      }\n    }\n\n  }\n\n  /**\n   * ローカル座標\n   * @param {*} rot \n   * @param {int} index\n   */\n  localRotate ( rot ,  n  = 0) {\n    if( \n      !_.has(this.value,\"anim\") || \n      !this.value.splineFrames[this.frame]||\n      !_.has(this.value.splineFrames[this.frame],\"rot\")\n    ) return  rot;\n\n    if(!this.value.tiltFlag) return  rot;\n    \n    return rot + this.value.splineFrames[n].rot;\n  }\n}\n\nclass ani {\n\n  constructor(){\n  \n  }\n}\n\nconst instance =  new ani();\nexport default instance;","import React, { Component } from \"react\";\nimport * as _ from 'lodash';\nimport { sigmoid } from \"face-api.js\";\nimport {aniSprite} from './ani';\n\nexport default class AssetLoader extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      done:false,\n      progress : 0,\n      images : [],\n      anies : [],\n    }\n    _.map( props.assets , asset =>{\n      this.loadImage(asset);\n    })\n  }\n\n  loadImage( asset ){\n    _.each ( asset.src , path => {\n      let img = new Image();\n      img.onload = ( image ) =>{\n        let images = this.state.images;\n        images.push({\n          id:asset.id,\n          image:img,\n        });\n        this.setState({\n          progress : this.state.progress+1,\n          images:images,\n        });\n        \n        this.props.progress({\n          result : this.state.progress ,\n          total : this.props.assets.length\n        });\n\n        if( this.props.assets.length === this.state.progress ) {\n\n          let anies = _.map( this.state.images , image =>{\n            const value = _.filter( this.props.assets , asset =>{return asset.id===image.id });\n            return {\n              id:image.id,\n              sprite:new aniSprite( value[0] , image.image , this.schedule )\n            };\n          });\n\n          this.setState({\n            done:true,\n            anies:anies,\n          });\n\n          this.props.done();\n        }\n      }\n      img.src = path;\n    })\n  }\n\n  show () {\n    if ( this.state.done ) {\n      return (<div>{this.props.view(this.state.anies)}</div>)\n    }\n    return null\n  }\n\n  render(){\n    return(<React.Fragment>{this.show()}</React.Fragment>)\n  }\n}","import React, { Component } from \"react\";\nimport * as faceapi from \"face-api.js/dist/face-api.js\";\nimport * as _ from 'lodash';\nimport {FaceDetect} from './components/FaceDetect';\nimport {FaceDetectView} from './components/FaceDetectView';\nimport {ClickDetect} from './components/ClickDetect';\nimport {VideoImage} from './components/VideoCanvas';\nimport { getLandmarks } from './canvas.point';\nimport { VIDEO_SIZE , INTERVAL, PARTS_INDEX  } from './config';\nimport AssetLoader from './components/AssetLoader';\nimport {aniSprite} from './components/ani';\nimport {scheduleDelegate} from './components/scheduleDelegate';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    //使用するアセット\n    this.assets =  [\n      {\n        id:1,\n        type:'image',\n        src:['./images/star_01.png',],\n        tiltFlag:true,\n        anim :[\n          { index:1 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:0.0 , },\n          { index:2 , pos: { x:-100, y:100} , rot:360 , scale:{x:1,y:1} ,time:0.5 , },\n          { index:3 , pos: { x:-100, y:200} , rot:180 , scale:{x:1,y:1} ,time:1.0 , },\n          { index:4 , pos: { x:100, y:0} , rot:200 , scale:{x:1,y:1} ,time:1.5 , },\n          { index:5 , pos: { x:-100, y:-200} , rot:360 , scale:{x:1,y:1} ,time:2.0 , },\n          { index:6 , pos: { x:0, y:100} , rot:180 , scale:{x:1,y:1} ,time:2.5 , },\n          { index:7 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:3.0 , }\n        ]\n      },\n      {\n        id:2,\n        type:'ani',\n        src:['./images/arrow_left.png',],\n        tiltFlag:true,\n        anim :[\n          { index:1 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:0.0 , },\n          { index:2 , pos: { x:10, y:0} , rot:45 , scale:{x:1,y:1} ,time:0.5 , },\n          { index:3 , pos: { x:80, y:0} , rot:90 , scale:{x:1,y:1} ,time:1.0 , },\n          { index:4 , pos: { x:90, y:0} , rot:95 , scale:{x:1,y:1} ,time:1.5 , },\n        ]\n      },\n      {\n        id:3,\n        type:'ani',\n        src:['./images/arrow_left.png',],\n        tiltFlag:false,\n        anim :[\n          { index:1 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:0.0 , },\n        ]\n      },\n    ];\n\n    //アセットの表示スケジュール(未実装)\n    //TODO:中心位置を設定する\n    this.schedules = [\n      {\n        start:1.0,\n        end:2.0,\n        asset:1,\n        position:{\n          x:null,\n          y:null\n        }\n      },\n      {\n        start:3.0,\n        end:4.0,\n        asset:2,\n        position:{\n          x:null,\n          y:null\n        }\n      },\n      {\n        start:5.0,\n        end:6.0,\n        asset:3,\n        position:{\n          x:null,\n          y:null\n        } \n      },\n    ];\n\n    this.state = {\n      video:null,\n      canvas: null,\n      overlay: null,\n      result : null,\n      landmarks : null,\n      positions : null,\n      anies : [],\n      selectedAssetId:1,\n      points:[],//仮でアセットの中心位置を保持\n    };\n\n    this.partsConfig = {\n      base: PARTS_INDEX.leftEye,\n      vector: PARTS_INDEX.rightEye,\n    }\n\n    this.overlay = null;\n\n    //イベントを設定\n    this.schedule = new scheduleDelegate();\n    _.each( this.schedules , val =>{\n      this.schedule.setCallback({\n        time:val.start,\n        callback:()=>{\n          console.log(\"start\",val.asset ,val.start);\n        }\n      })\n      this.schedule.setCallback({\n        time:val.end,\n        callback:()=>{\n          console.log(\"end\",val.asset ,val.end);\n        }\n      })\n    })\n    this.schedule.start();\n  }\n\n  setCanvas(ref) {\n    if (this.state.canvas !== ref && ref) {\n      this.setState({ canvas: ref });\n    }\n  }\n\n  setVideo(ref) {\n    if (this.state.video !== ref && ref) {\n      this.setState({ video: ref });\n    }\n  }\n\n  setOverlay(ref) {\n    if (this.state.overlay !== ref && ref) {\n      this.setState({ overlay: ref });\n      this.initCanvas();\n    }\n  }\n\n  initCanvas(){\n    if( !this.state.canvas || !this.state.overlay ) return;\n    this.setState({\n      width:VIDEO_SIZE.width,\n      height:VIDEO_SIZE.height\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoImage \n          size = {VIDEO_SIZE}\n          interval={INTERVAL}\n          video ={(ref)=>{ this.setVideo(ref); }}\n          canvas = {(ref)=>{ this.setCanvas(ref); }}\n        />\n        <FaceDetect \n          canvas={this.state.canvas} \n          video={this.state.video}\n          interval={INTERVAL}\n          result={(result)=>{\n            const { width, height } = faceapi.getMediaDimensions(this.state.video);\n            const resizedResults = [result].map(res => res.forSize(width, height));\n            const landmarks = getLandmarks(resizedResults[0].faceLandmarks);\n            this.setState({\n              landmarks:landmarks,\n              positions:resizedResults[0].landmarks.positions\n            });\n          }} />\n        <AssetLoader\n          assets = {this.assets}\n          progress = {( progress )=>{\n            console.log(\"progress \" , progress );\n          }}\n          done  = {()=>{ \n            this.schedule.start(); }}\n          view = {( anies ) => {\n            return(\n              <React.Fragment>\n                <FaceDetectView\n                  video = {this.state.video}\n                  partsConfig = {this.partsConfig}\n                  landmarks ={this.state.landmarks}\n                  positions = {this.state.positions}\n                  showEyes = {true}\n                  showPoints = {false}\n                  setRef = {(ref)=>{this.setOverlay(ref)}}\n                  anies = {anies}\n                  selectedAssetId ={this.state.selectedAssetId}\n                />\n              </React.Fragment>\n            );\n          }}\n        ></AssetLoader>\n        <button \n          style={{display:\"none\"}}\n          onClick={()=>{\n          if(this.schedule.isPlay) {\n            this.schedule.pause();\n          }else {\n            this.schedule.restart();\n          }\n        }}>play/stop</button>\n\n        <button onClick={()=>{\n          this.setState({selectedAssetId:1})\n        }}>star</button>\n        \n        <button onClick={()=>{\n          this.setState({selectedAssetId:2})\n        }}>glasses</button>\n        \n        <button onClick={()=>{\n          this.setState({selectedAssetId:3})\n        }}>star2</button>\n        \n      </div>\n    );\n  }\n\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlayClickable\":\"P2Ozy3EA7iOKnUsuEd04Y\",\"overlayCanvas\":\"_1VTjcrIdjUewwZ-qVkXQxP\",\"videoimage\":\"_27P8rrrUDhjUTuQVCNHvHs\"};"],"sourceRoot":""}