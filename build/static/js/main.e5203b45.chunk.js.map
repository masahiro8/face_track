{"version":3,"sources":["components/VideoCanvas.scss","canvas.point.js","components/FaceDetect.jsx","config.js","components/VideoCanvas.jsx","util/vector.js","components/AssetLoader.jsx","components/scheduleDelegate.js","components/spline.js","components/ani.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","overlayCanvas","videoimage","setPoint","canvas","pos","col","ctx","getContext","fillStyle","fillRect","x","y","FaceDetect","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pointlog","net","faceapi","state","faceDetect","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee2","_this2","wrap","_context2","prev","next","tinyFaceDetector","load","console","log","setInterval","_callee","_context","predict","stop","interval","apply","arguments","_predict","_callee3","options","result","_context3","abrupt","inputSize","scoreThreshold","video","withFaceLandmarks","sent","setState","react_default","createElement","Component","VIDEO_SIZE","width","height","INTERVAL","Math","floor","PARTS_INDEX","Video","media","selfRef","initCam","navigator","mediaDevices","getUserMedia","audio","facingMode","size","p","Promise","resolve","then","stream","srcObject","onloadedmetadata","e","catch","err","alert","_this3","ref","setSelf","className","autoPlay","playsInline","Canvas","_this4","_this5","draw","getBoundingClientRect","context","drawImage","_this6","set","id","VideoImage","_Component3","_this7","_this8","styles","VideoCanvas_Video","setVideo","VideoCanvas_Canvas","setCanvas","shiftBase","b","toFixed","vectorLength","v","sqrt","dotProduct","crossProduct","distance","p1","p2","pow","AssetLoader","done","progress","images","_","assets","asset","loadImage","src","path","img","Image","onload","image","push","length","setImages","children","Fragment","show","scheduleDelegate","isPlay","time_total","time_start","time_interval","time_current","time_prev","delegate","init","setCurrent","checkCallback","window","requestAnimationFrame","update","bind","time","d","callback","restart","Date","getTime","_current","cos","sin","abs","PI","random","Spline","c","num","prototype","constructor","sp","tmp","i","w","culc","t","dt","j","sprite","local","rot","move","rotate","emit","getCtx","save","_rot","_pos","cx","cy","setTransform","restore","aniSprite","_sprite","scheduler","frame","schedule","makeFrames","makeSplineFrames","playAnims","splineFrames","_anim","anim","rots","map","val","index","frames","list","Array","n","r","current","getValuePerFrame","concat","posx","posy","spx","spy","total_frames","_time","reverse","_frames","tilt","deg","_tilt","localMove","localRotate","theta","fpos","_pos_x","_pos_y","undefined","BASE_PARTS","ani","VECTOR_PARTS","src_App","App","type","loop","scale","overlay","landmarks","positions","anies","selectedAssetId","setCallback","initCanvas","VideoCanvas_VideoImage","FaceDetect_FaceDetect","_faceapi$getMediaDime","resizedResults","res","forSize","jawOutline","getJawOutline","nose","getNose","mouth","getMouth","leftEye","getLeftEye","rightEye","getRightEye","leftEyeBrow","getLeftEyeBrow","rightEyeBrow","getRightEyeBrow","getLandmarks","faceLandmarks","AssetLoader_AssetLoader","start","App_FaceDetectView","showEyes","showPoints","setRef","setOverlay","style","display","onClick","pause","FaceDetectView","radian","star","points","nextProps","clearCanvas","detectTilt","drawPoints","drawParts","point","initPointRate","begin","end","_end","vector","_crossProduct","acos","myPoint","_begin","_end_vec","vec_length","point_distance","rate","dot","vec","distanceFromCenter","cross","bool","vec2","_x","_y","transform","_myPoint","distanceFromEdge","_dotProduct","cos_theta","_a","_b","dotDistance","math","rate_vec_point","rate_from_edge","_points","clearRect","step","parts","getColor","rect","clientX","left","clientY","top","addPoint","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5203b45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlayCanvas\":\"_1VTjcrIdjUewwZ-qVkXQxP\",\"videoimage\":\"_27P8rrrUDhjUTuQVCNHvHs\"};","import * as faceapi from \"face-api.js/dist/face-api.js\";\r\n\r\nexport const setPoint = ( canvas , pos  , col) =>{\r\n  const ctx = canvas.getContext(\"2d\");\r\n  ctx.fillStyle = col||\"#0ff\";\r\n  ctx.fillRect(pos.x,pos.y,4,4);\r\n}\r\n\r\nexport const getLandmarks = (landmarks) => {\r\n  const jawOutline = landmarks.getJawOutline();\r\n  const nose = landmarks.getNose();\r\n  const mouth = landmarks.getMouth();\r\n  const leftEye = landmarks.getLeftEye();\r\n  const rightEye = landmarks.getRightEye();\r\n  const leftEyeBrow = landmarks.getLeftEyeBrow();\r\n  const rightEyeBrow = landmarks.getRightEyeBrow();\r\n  return {\r\n    nose:nose,\r\n    mouth:mouth,\r\n    leftEye:leftEye,\r\n    rightEye:rightEye,\r\n    leftEyeBrow:leftEyeBrow,\r\n    rightEyeBrow:rightEyeBrow,\r\n    jawOutline:jawOutline,\r\n  }\r\n}\r\n\r\nexport const resizeCanvasAndResults = (dimensions, canvas, results) => {\r\n  const { width, height } = dimensions instanceof HTMLVideoElement\r\n    ? faceapi.getMediaDimensions(dimensions)\r\n    : dimensions\r\n  canvas.width = width\r\n  canvas.height = height\r\n\r\n  // resize detections (and landmarks) in case displayed image is smaller than\r\n  // original size\r\n  return results.map(res => res.forSize(width, height))\r\n}\r\n\r\nexport const drawDetections = (dimensions, canvas, detections)=> {\r\n  console.log(\"drawDetections\" ,detections);\r\n  const resizedDetections = resizeCanvasAndResults(dimensions, canvas, detections)\r\n  faceapi.drawDetection(canvas, resizedDetections)\r\n}\r\n\r\nexport const drawLandmarks = (dimensions, canvas, results, withBoxes = true) => {\r\n  \r\n  const resizedResults = resizeCanvasAndResults(dimensions, canvas, results)\r\n  console.log(\"drawLandmarks = \",resizedResults);\r\n  if (withBoxes) {\r\n    faceapi.drawDetection(canvas, resizedResults.map(det => det.detection))\r\n  }\r\n\r\n  const faceLandmarks = resizedResults.map(det => det.landmarks)\r\n  const drawLandmarksOptions = {\r\n    lineWidth: 2,\r\n    drawLines: true,\r\n    color: 'green'\r\n  }\r\n  faceapi.drawLandmarks(canvas, faceLandmarks, drawLandmarksOptions)\r\n}","import React, { Component } from \"react\";\nimport * as _ from \"lodash\";\nimport * as faceapi from \"face-api.js/dist/face-api.js\";\nimport { constant } from \"@tensorflow/tfjs-layers/dist/exports_initializers\";\nimport {setPoint,getLandmarks } from '../canvas.point';\n\n// tiny_face_detector options\nlet inputSize = 128\nlet scoreThreshold = 0.5\n\nexport class FaceDetect extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = null;\n    this.pointlog = null;\n    this.net = new faceapi.FaceLandmark68TinyNet();\n    this.state = {\n      faceDetect: {},\n    };\n  }\n\n  async componentDidMount() {\n\n    //必要なモデルのロード\n    await faceapi.nets.tinyFaceDetector.load('models/face/');\n    await faceapi.loadFaceLandmarkModel('models/face/');\n    console.log(\"load models\");\n    setInterval(async () => {\n      await this.predict();\n    }, this.props.interval);\n  }\n\n  async predict() {\n    if (!this.props.canvas) return;\n    //検出\n    let inputSize = 128;\n    let scoreThreshold = 0.5;\n    const options = new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })\n    const result = await faceapi.detectSingleFace(this.props.video, options).withFaceLandmarks();\n    //console.log(\"predict result\" ,result);\n    if (result) {\n      //console.log(\"result \" , result );\n      // const { width, height } = faceapi.getMediaDimensions(this.props.video);\n      // const resizedResults = [result].map(res => res.forSize(width, height));\n      this.setState({ faceDetect: result });\n      this.props.result(result);\n    }\n  }\n\n  render() {\n    return (\n      <div/>\n    );\n  }\n}","export const location = 'https://192.168.100.109:3000/';\n\nexport const VIDEO_SIZE = {\n  width:640,\n  height:480,\n}\nexport const INTERVAL =  Math.floor(1000/30);\n\n//追従するパーツ\nexport const PARTS_INDEX = {\n  nose :30,\n  leftEye :38,\n  rightEye :44,\n} //[30,38,44]; // 鼻 左目　右目","import React, { Component } from \"react\";\nimport styles from './VideoCanvas.scss';\nimport {VIDEO_SIZE} from '../config';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.media = null;\n    this.selfRef = null;\n  }\n\n  async componentDidMount() {\n    await this.initCam();\n    console.log(\"detect init\");\n  }\n\n  async initCam() {\n\n    // const stream = await navigator.mediaDevices.getUserMedia({ video: {} }) \n    this.media = navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: \"environment\",\n        width: this.props.size.width, \n        // height: this.props.size.height,\n      },\n    });\n\n    let p = new Promise( resolve =>{\n      this.media.then(stream => {\n        this.selfRef.srcObject = stream;\n        this.selfRef.onloadedmetadata = function(e) {\n          console.log(\"Onload video\" , e);\n          resolve();\n        };\n      });\n      \n      this.media.catch(err => {\n        alert(err);\n      });\n    });\n\n    return p;\n    \n  }\n\n  render() {\n    return (\n      <video\n        ref={ref => {\n          this.selfRef = ref;\n          this.props.setSelf(ref);\n        }}\n        className=\"video\"\n        autoPlay\n        playsInline\n        width={VIDEO_SIZE.width}\n        height={VIDEO_SIZE.height}\n      />\n    );\n  }\n}\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.draw();\n    }, this.props.interval);\n  }\n\n  draw() {\n    if (!this.props.video || !this.props.canvas) {\n      return;\n    }\n    let rect = this.props.video.getBoundingClientRect();\n    var context = this.canvas.getContext(\"2d\");\n    this.canvas.width = this.props.size.width;\n    this.canvas.height = this.props.size.height;\n    context.drawImage(\n      this.props.video,0, 0,\n      this.props.size.width,\n      this.props.size.height);\n  }\n\n  render() {\n    return (\n      <canvas\n        ref={ref => {\n          this.canvas = ref;\n          this.props.set(ref);\n        }}\n        id={\"canvas\"}\n        className=\"canvas\"\n      />\n    );\n  }\n}\n\nexport class VideoImage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      video: null,\n      canvas: null,\n    };\n  }\n\n  setVideo(ref) {\n    if (this.state.video !== ref && ref) {\n      this.setState({ video: ref });\n      this.props.video(ref);\n    }\n  }\n\n  setCanvas(ref) {\n    if (this.state.canvas !== ref && ref) {\n      this.setState({ canvas: ref });\n      this.props.canvas(ref);\n    }\n  }\n\n  render(){\n    return(\n      <div className={styles[\"videoimage\"]}>\n        <Video\n          size = {this.props.size}\n          setSelf={ref => {\n            this.setVideo(ref);\n          }}\n        />\n        <Canvas\n          size = {this.props.size}\n          video={this.state.video}\n          set={ref => {\n            this.setCanvas(ref);\n          }}\n          interval={this.props.interval}\n        />\n      </div>\n    )\n  }\n}","    //原点補正\n    export const shiftBase = ( b ,p ) =>{\n      return {x:(p.x-b.x).toFixed(2),y:(p.y-b.y).toFixed(2)};\n    }\n    //ベクトル長さ\n    export const vectorLength =(v)=>{\n      return Math.sqrt( v.x * v.x + v.y * v.y);\n      //return Math.pow( ( v.x * v.x ) + ( v.y * v.y ), 0.5 );\n    }\n    //内積:正しい\n    export const dotProduct = (a,b) =>{\n      return a.x * b.x + a.y * b.y;\n    }\n\n    //外積\n    export const crossProduct = ( p , v ) =>{\n      return p.x * v.y - v.x * p.y;\n    }\n\n    //ベクトルのなす角(ラジアン)\n    //http://www.sousakuba.com/Programming/gs_two_vector_angle.html\n    //https://qiita.com/vkgtaro/items/b2cd00f376c427cb9ea6\n    export const theta = ( a, b ) => {\n      const _a = vectorLength(a);\n      const _b = vectorLength(b);\n      return Math.cos(dotProduct(a,b) / ( _a * _b ));\n    }\n\n    //ベクトル座標 座標,ベクトル\n    export const vecPos = (p,v) => {\n      return {x:p.x/v,y:p.y*v};\n    }\n    //２点間の距離:正しい\n    export const distance = (p1, p2) => {\n      return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n    };\n\n    //原点(0,0)からx軸の傾き\n    export const tilt = ( a ) => {\n      return a.x / vectorLength(a);\n    }","import React, { Component } from \"react\";\nimport * as _ from 'lodash';\nimport { sigmoid } from \"face-api.js\";\n\nexport default class AssetLoader extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      done:false,\n      progress : 0,\n      images : [],\n    }\n    _.map( props.assets , asset =>{\n      this.loadImage(asset);\n    })\n  }\n\n  loadImage( asset ){\n    _.each ( asset.src , path => {\n      let img = new Image();\n      img.onload = ( image ) =>{\n        let images = this.state.images;\n        images.push({\n          id:asset.id,\n          image:img,\n        });\n        this.setState({\n          progress : this.state.progress+1,\n          images:images,\n        })\n        if( this.props.assets.length == this.state.progress ) {\n          this.props.setImages(this.state.images);\n          this.setState({done:true});\n        }\n      }\n      img.src = path;\n    })\n  }\n\n  show () {\n    if ( this.state.done )  return <div>{this.props.children}</div> \n    return null\n  }\n\n  render(){\n    return(<React.Fragment>{this.show()}</React.Fragment>)\n  }\n}","import * as _ from 'lodash';\nexport class scheduleDelegate {\n  constructor(){\n    this.isPlay = false;\n\n    this.time_total = null;\n    this.time_start =  null;\n    this.time_interval = null;\n    this.time_current = null;\n    this.time_prev = null;\n\n    this.delegate = [];\n    this.init();\n  }\n\n  init(){\n    console.log(\"init schedule delegate\");\n  }\n\n  update () {\n    if( this.isPlay ) {\n      //ここに実装\n      this.setCurrent();\n      this.checkCallback(this.time_total);\n      // console.log(\"total = \", this.time_total/1000);\n    }\n    window.requestAnimationFrame(this.update.bind(this));\n  }\n\n  checkCallback(time) {\n    if(  !this.delegate.length ) return;\n    //コールバックを取り出す\n    let delegate = _.filter( this.delegate , ( value )=>{\n      return value.time == Math.floor(time/1000);\n    });\n    //コールバックを削除する\n    this.delegate = _.reject( this.delegate , ( value )=>{\n      return value.time == Math.floor(time/1000);\n    });\n    _.each ( delegate  , d =>{\n      d.callback();\n    })\n  }\n\n  start () {\n    this.time_total = 0;\n    this.restart();\n    this.update();\n  }\n\n  restart () {\n    this.time_start = new Date().getTime();\n    this.time_current = new Date().getTime();\n    this.time_prev = new Date().getTime();\n    this.time_interval = 0;\n    this.isPlay = true;\n  }\n\n  pause () {\n    this.isPlay = false;\n  }\n\n  /**\n   * 時間の更新\n   */\n  setCurrent() {\n    const _current =  new Date().getTime();\n    this.time_current = _current - this.time_start;\n    this.time_interval = _current  - this.time_prev;\n    this.time_total += this.time_interval;\n    this.time_prev = _current;\n  }\n\n  setCallback(  value  ) {\n    this.delegate.push({\n      time : value.time,\n      callback : value.callback,\n    })\n  }\n}","var cos    = Math.cos,\nsin    = Math.sin,\nabs    = Math.abs,\nPI     = Math.PI,\nfloor  = Math.floor,\nrandom = Math.random;\n \n export function Spline() {\n    this.a = [];\n    this.b = [];\n    this.c = [];\n    this.d = [];\n\n    this.num = 0;\n}\nSpline.prototype = {\n    constructor: Spline,\n    num: 0,\n    a: null,\n    b: null,\n    c: null,\n    d: null,\n    init: function (sp) {\n        var tmp;\n        var w = [];\n        var i;\n\n        this.num = sp.length - 1;\n        var num = this.num;\n\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n\n        // 3次多項式の0次係数(a)を設定\n        for(i = 0; i <= num; i++) {\n            a[i] = sp[i];\n        }\n\n        // 3次多項式の2次係数(c)を計算\n        c[0] = c[num] = 0.0;\n        for(i = 1; i < num; i++) {\n            c[i] = 3.0 * (a[i - 1] - 2.0 * a[i] + a[i + 1]);\n        }\n\n        // 左下を消す\n        w[0] = 0.0;\n        for(i = 1; i < num; i++) {\n            tmp = 4.0 - w[i - 1];\n            c[i] = (c[i] - c[i - 1]) / tmp;\n            w[i] = 1.0 / tmp;\n        }\n\n        // 右上を消す\n        for(i = num - 1; i > 0; i--) {\n            c[i] = c[i] - c[i + 1] * w[i];\n        }\n\n        // 3次多項式の1次係数(b)と3次係数(b)を計算\n        b[num] = d[num] = 0.0;\n        for (i = 0; i < num; i++) {\n            d[i] = (c[i + 1] - c[i]) / 3.0;\n            b[i] = a[i + 1] - a[i] - c[i] - d[i];\n        }\n    },\n\n    // 媒介変数(0～num - 1の実数）に対する値を計算\n    culc: function (t) {\n        var j = floor(t);\n        var dt;\n        var num = this.num;\n\n        var a = this.a;\n        var b = this.b;\n        var c = this.c;\n        var d = this.d;\n\n        if (j < 0) {\n            j = 0;\n        }\n        else if (j >= num) {\n            j = num - 1; // 丸め誤差を考慮\n        }\n\n        dt = t - j;\n\n        return a[j] + (b[j] + (c[j] + d[j] * dt) * dt ) * dt;\n    }\n};","import * as _ from 'lodash';\nimport {scheduleDelegate} from \"./scheduleDelegate\";\nimport {Spline} from './spline';\n\nclass sprite {\n  constructor(){\n\n  }\n\n  init ( image ) {\n    this.local  = {\n      pos :{x:0,y:0},\n      rot : 0,\n    }\n    this.img = image;\n  }\n\n  getCtx () {\n    return this.canvas.getContext(\"2d\");\n  }\n\n  setCanvas ( canvas ) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    return this;\n  }\n\n  transform ( pos , rot ) {\n    this.move(pos).rotate(rot).emit();\n  }\n\n  move ( pos ) {\n    this.local.pos = pos;\n    return this;\n  }\n\n  rotate (  rot  ) {\n    this.local.rot = rot;\n    return this;\n  }\n\n  emit () {\n    const ctx = this.getCtx();\n    ctx.save();\n    const _rot = this.local.rot;\n    const _pos = this.local.pos;\n    \n    // 回転の中心位置を計算（画像の中心を回転中心にする）\n    const cx = _pos.x + this.img.width/2;\n    const cy = _pos.y + this.img.height/2;\n\n    // 画像を回転\n    ctx.setTransform(\n      Math.cos(_rot), \n      Math.sin(_rot), \n      -Math.sin(_rot), \n      Math.cos(_rot),\n      cx-cx*Math.cos(_rot)+cy*Math.sin(_rot),\n      cy-cx*Math.sin(_rot)-cy*Math.cos(_rot)\n    );\n    ctx.drawImage(this.img, _pos.x, _pos.y);\n    ctx.restore();\n    return this;\n  }\n}\n\nconst base_fps = 60;\n\nclass animOptimize {\n  /***\n   * 基準 fps = 60\n   * 1.再生時間から全フレーム数を算出\n   * 2.1フレームあたりの移動量\n   * 3.\n   * \n   * { pos {x:0,y:0} time:0.0 }\n   * { pos {x:0,y:60} time:2.0 }\n   * \n   * 1. 60 * 2.0 = 120.0\n   * 2. fps/120.0 = 移動量\n   * \n   */\n\n  constructor(){\n    this.fps = 0;\n    this.fps_prev  = new Date().getTime();\n    this.update();\n  }\n  \n  update () {\n    window.requestAnimationFrame(this.update.bind(this));\n    this.flatFps();\n  }\n   /**\n   * fps平均化\n   */\n  flatFps  () {\n    const _fps_current = new Date().getTime();\n    const time = _fps_current - this.fps_prev;\n    this.fps_prev = _fps_current;\n    const FPS = (1000/time).toFixed(1);\n    //console.log(\"fps \" , FPS , time);\n  }\n}\n\nconst range = (min, max) => {\n  const len  = max - min;\n  const rand = Math.random() * len;\n  return min + rand;\n}\n\n\nexport class aniSprite extends sprite {\n\n  constructor( value, image , scheduler){\n\n    super(image);\n    this.value = value;\n    this.scheduler = scheduler;\n    this.isPlay = true;\n\n    this.frame  = 0;\n\n    this.schedule = new scheduleDelegate();\n    //this.ftpOptimizer = new animOptimize();\n\n    this.init( image );\n    this.makeFrames();\n    this.makeSplineFrames();\n    this.update();\n\n  }\n\n  update () {\n    window.requestAnimationFrame(this.update.bind(this));\n    this.playAnims();\n  }\n\n  playAnims () {\n    if ( this.frame >= this.value.splineFrames.length )\n    { this.frame = 0; } else \n    { this.frame++; }\n  }\n\n  makeSplineFrames ( ) {\n\n    let  _anim =  this.value.anim;\n\n    //回転\n    const getValuePerFrame = ( current , next , frames , index )=>{\n      return current + ((( next - current ) /frames ) * index ) ;\n    }\n\n    let rots = [];\n    let rots_index = 0;\n    _anim.map(( val , index  ) => {\n      if( _anim[index+1] ) {\n        const _time = _anim[index+1].time - _anim[index].time;\n        const frames  = base_fps * _time;\n        const _frames = Array.apply(null,new Array(frames));\n        let list = _frames.map(( value  , n ) =>{\n          const r = getValuePerFrame(_anim[index].rot , _anim[index+1].rot,frames,n);\n          return { rot :Math.floor(r) };\n        })\n        rots = rots.concat(list);\n      }\n    })\n\n    //位置の曲線変換\n    let posx = [];\n    let posy = [];\n    _anim.map(( val ) =>{\n      posx.push(val.pos.x);\n      posy.push(val.pos.y);\n    })\n    const spx = new Spline();\n    const spy = new Spline();\n    spx.init(posx);\n    spy.init(posy);\n\n    this.value.splineFrames = [];\n    let total_frames = 0;\n    _anim.map(( val  ,index ) => {\n      if( _anim[index+1] ) {\n        const _time = _anim[index+1].time - _anim[index].time;\n        const frames  = base_fps * _time;\n        total_frames += frames;\n      }\n      index++;\n    })\n    \n    const total_frames_array = Array.apply( null , Array(total_frames));\n    let list = total_frames_array.map(( val , index  ) => {\n      const m = ((_anim.length-1)/total_frames);\n      const i = (m*index).toFixed(2);\n      const x = spx.culc( i );\n      const y = spy.culc( i );\n      return { index :index , pos :{x:x,y:y} };\n    });\n\n    list.reverse();//回転変換を使う場合はフレーム順を変える\n\n    this.value.splineFrames = list.map(( val  , index  ) =>{\n      return { index :val.index ,pos:val.pos  ,rot:rots[index].rot};\n    })\n    console.log(\"this.value.splineFrames \" ,this.value.splineFrames);\n  }\n\n  /**\n   * フレーム数を確定\n   * とりあえずposだけ\n   */\n  makeFrames () {\n    const getValuePerFrame = ( current , next , frames , index )=>{\n      return (( next - current ) /frames ) * index ;\n    }\n\n    this.value.frames = [];\n    _.each( this.value.anim , ( val , index  ) => {\n      if( this.value.anim[index+1] ) {\n        const _time = this.value.anim[index+1].time - this.value.anim[index].time;\n        const frames  = base_fps * _time;\n        const _frames = new Array(frames);\n        let list = _.map( _frames , ( value , n ) =>{\n          const x = getValuePerFrame(this.value.anim[index].pos.x , this.value.anim[index+1].pos.x,frames,n);\n          const y = getValuePerFrame(this.value.anim[index].pos.y ,this.value.anim[index+1].pos.y,frames,n);\n          return { index :n , pos :{x:x,y:y} };\n        })\n        this.value.frames = this.value.frames.concat(list);\n      }else {\n        this.value.frames.push({index:1 , pos:this.value.anim[index].pos });\n      }\n    })\n  }\n\n  transform ( pos , tilt , deg ) {\n\n    let _pos = pos;\n    let _tilt = tilt;\n\n    if( this.isPlay ) {\n      _pos = this.localMove(pos , deg);\n      _tilt = this.localRotate(tilt );  \n    }\n    \n    this.move(_pos).rotate(_tilt).emit();\n  }\n\n  /**\n   * ローカル座標\n   * @param {*} pos \n   * @param {int} index\n   */\n  localMove ( pos , theta) {\n    if( \n      !_.has(this.value,\"frames\") || \n      !this.value.splineFrames[this.frame]\n    ) return  pos;\n\n    const fpos = this.value.splineFrames[this.frame].pos;\n    //回転行列 > 左右反転してしまう\n    const _pos_x =  (Math.cos(theta)* fpos.x) + (Math.sin(theta)* fpos.y );\n    const _pos_y =  (-1 * Math.sin(theta)* fpos.x) + (Math.cos(theta)* fpos.y );\n\n    const _pos = {\n      x : pos.x + _pos_x,\n      y : pos.y + _pos_y\n    }\n    return _pos;\n  }\n\n  /**\n   * ローカル座標\n   * @param {*} rot \n   * @param {int} index\n   */\n  localRotate ( rot ,  n  = 0) {\n    if( !_.has(\n      this.value,\"anim\") || \n      this.value.splineFrames[this.frame]\n    ) return  rot;\n    return rot + this.value.splineFrames[n].rot;\n  }\n}\n\nclass ani {\n\n  constructor(){\n  \n  }\n}\n\nconst instance =  new ani();\nexport default instance;","import React, { Component } from \"react\";\nimport * as faceapi from \"face-api.js/dist/face-api.js\";\nimport * as _ from 'lodash';\nimport math from 'mathjs';\nimport {FaceDetect} from './components/FaceDetect';\nimport {VideoImage} from './components/VideoCanvas';\nimport {setPoint,getLandmarks } from './canvas.point';\nimport {setImage ,setRotate } from './canvas.image';\nimport styles from './components/VideoCanvas.scss';\nimport { VIDEO_SIZE , INTERVAL ,PARTS_INDEX } from './config';\nimport * as vector from './util/vector';\nimport AssetLoader from './components/AssetLoader';\nimport ani,{aniSprite} from './components/ani';\nimport {scheduleDelegate} from './components/scheduleDelegate';\n\nconst BASE_PARTS = PARTS_INDEX.leftEye;\nconst VECTOR_PARTS = PARTS_INDEX.rightEye;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.assets =  [\n      {\n        id:1,\n        type:'image',\n        src:['./images/star_01.png',],\n        loop:true,\n        anim :[\n          { index:1 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:0.0 , },\n          { index:2 , pos: { x:-100, y:100} , rot:360 , scale:{x:1,y:1} ,time:0.5 , },\n          { index:3 , pos: { x:-100, y:200} , rot:180 , scale:{x:1,y:1} ,time:1.0 , },\n          { index:4 , pos: { x:100, y:0} , rot:200 , scale:{x:1,y:1} ,time:1.5 , },\n          { index:5 , pos: { x:-100, y:-200} , rot:360 , scale:{x:1,y:1} ,time:2.0 , },\n          { index:6 , pos: { x:0, y:100} , rot:180 , scale:{x:1,y:1} ,time:2.5 , },\n          { index:7 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:3.0 , }\n        ]\n      },\n      {\n        id:2,\n        type:'ani',\n        src:['./images/arrow_left.png',],\n        loop:true,\n        anim :[\n          { index:1 , pos: { x:0, y:0} , rot:0 , scale:{x:1,y:1} ,time:0.0 , },\n          { index:2 , pos: { x:10, y:0} , rot:45 , scale:{x:1,y:1} ,time:0.5 , },\n          { index:3 , pos: { x:80, y:0} , rot:90 , scale:{x:1,y:1} ,time:1.0 , },\n          { index:4 , pos: { x:90, y:0} , rot:95 , scale:{x:1,y:1} ,time:1.5 , },\n        ]\n      },\n    ];\n\n    this.state = {\n      video:null,\n      canvas: null,\n      overlay: null,\n      result : null,\n      landmarks : null,\n      positions : null,\n      anies : [],\n      selectedAssetId:1,\n    };\n\n    this.overlay = null;\n\n    //イベントを設定\n    this.schedule = new scheduleDelegate();\n    this.schedule.setCallback({\n      time:5.0,\n      callback:()=>{console.log(\"callback1\",5.0);}\n    })\n    this.schedule.setCallback({\n      time:5.0,\n      callback:()=>{console.log(\"callback2\",5.0);}\n    })\n  }\n\n  setCanvas(ref) {\n    if (this.state.canvas !== ref && ref) {\n      this.setState({ canvas: ref });\n    }\n  }\n\n  setVideo(ref) {\n    if (this.state.video !== ref && ref) {\n      this.setState({ video: ref });\n      console.log(\"setVideo \" );\n    }\n  }\n\n  setOverlay(ref) {\n    if (this.state.overlay !== ref && ref) {\n      this.setState({ overlay: ref });\n      this.initCanvas();\n      console.log(\"setOverlay \" );\n    }\n  }\n\n  initCanvas(){\n    if( !this.state.canvas || !this.state.overlay ) return;\n    this.setState({\n      width:VIDEO_SIZE.width,\n      height:VIDEO_SIZE.height\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoImage \n          size = {VIDEO_SIZE}\n          interval={INTERVAL}\n          video ={(ref)=>{ this.setVideo(ref); }}\n          canvas = {(ref)=>{ this.setCanvas(ref); }}\n        />\n        <FaceDetect \n          canvas={this.state.canvas} \n          video={this.state.video}\n          interval={INTERVAL}\n          result={(result)=>{\n            const { width, height } = faceapi.getMediaDimensions(this.state.video);\n            const resizedResults = [result].map(res => res.forSize(width, height));\n            const landmarks = getLandmarks(resizedResults[0].faceLandmarks);\n            this.setState({\n              landmarks:landmarks,\n              positions:resizedResults[0].landmarks.positions\n            });\n          }} />\n        <AssetLoader\n          assets = {this.assets}\n          setImages = {(images)=>{\n            let anies = _.map( images , image =>{\n              const value = _.filter( this.assets , asset =>{return asset.id==image.id });\n              return {\n                id:image.id,\n                sprite:new aniSprite( value[0] , image.image , this.schedule )\n              };\n            });\n            this.setState({\n              anies : anies,\n            });\n            //タイマー開始\n            this.schedule.start();\n          }}\n        >\n          <FaceDetectView\n            video = {this.state.video}\n            landmarks ={this.state.landmarks}\n            positions = {this.state.positions}\n            showEyes = {true}\n            showPoints = {false}\n            setRef = {(ref)=>{this.setOverlay(ref)}}\n            anies = { this.state.anies }\n            selectedAssetId ={this.state.selectedAssetId}\n          />\n        </AssetLoader>\n        <button \n          style={{display:\"none\"}}\n          onClick={()=>{\n          if(this.schedule.isPlay) {\n            this.schedule.pause();\n          }else {\n            this.schedule.restart();\n          }\n        }}>play/stop</button>\n        <button onClick={()=>{\n          this.setState({selectedAssetId:1})\n        }}>star</button>\n        <button onClick={()=>{\n          this.setState({selectedAssetId:2})\n        }}>glasses</button>\n      </div>\n    );\n  }\n\n}\nexport default App;\n\nclass FaceDetectView extends Component {\n  constructor(props){\n    super(props);\n    this.canvas = null;\n    this.tilt = null;\n    this.deg = null;\n    this.radian = null;\n    this.star = null;\n\n    this.state ={\n      points:[],\n      tilt:null,\n    };\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.landmarks) {\n      this.clearCanvas();\n\n      //傾き\n      this.detectTilt(nextProps.positions[VECTOR_PARTS],nextProps.positions[BASE_PARTS]);\n\n      if(this.props.showEyes) this.drawPoints();\n      if(this.props.showPoints) this.drawParts();\n      if(this.state.points.length) {\n        _.each ( this.state.points ,  ( point , index ) =>{\n          this.initPointRate( point,index ,nextProps.positions[BASE_PARTS] , nextProps.positions[VECTOR_PARTS]);\n          this.setPoint(point,index ,nextProps.positions[BASE_PARTS] , nextProps.positions[VECTOR_PARTS]);\n        })\n      }\n    }\n  }\n\n  setCanvas ( ref ) {\n    this.canvas = ref;\n    this.props.setRef(ref);\n  }\n\n  //傾き検出\n  detectTilt ( begin , end ){\n    //原点をbeginとして補正\n    const _begin = { x:0 , y: 0};\n    const _end = vector.shiftBase( begin , end);\n    //なす角\n    const _crossProduct = vector.crossProduct(_end,{x:100,y:0});\n    this.radian = Math.acos(vector.tilt(_end));\n    this.deg = this.radian*(180/Math.PI);\n    this.tilt = _crossProduct<0?this.radian:-this.deg*(Math.PI/180);\n  }\n\n  //描画\n  setPoint ( myPoint, index , begin, end ) {\n\n    //原点をbeginとして補正\n    const _begin = { x:0 , y: 0};\n    const _end = vector.shiftBase( begin , end);\n    //ベクトル距離\n    const _end_vec = vector.vectorLength(_end);\n    //begin > end 距離\n    const vec_length = vector.distance(_begin , _end);\n    //線上の距離\n    const point_distance = vec_length*myPoint.rate.dot;\n    const vec = {\n      x : ( _begin.x+_end.x/_end_vec*point_distance ) + begin.x,\n      y : ( _begin.y+_end.y/_end_vec*point_distance ) + begin.y\n    }\n    //半径\n    const distanceFromCenter = vec_length*myPoint.rate.cross;\n    const r = myPoint.bool.cross?270:90;\n    const radian = r*Math.PI/180;\n    const vec2 = {\n      x:distanceFromCenter * Math.cos(radian) + vec.x,\n      y:distanceFromCenter * Math.sin(radian) + vec.y,\n    }\n    \n    //仮で画像描画\n    const asset = _.filter(this.props.anies,(asset)=>{return asset.id==this.props.selectedAssetId})\n    if( asset.length ) {\n      const img = asset[0].sprite.img;\n      let _x = vec2.x - (img.width/2);\n      let _y = vec2.y - (img.height/2);\n      asset[0].sprite.setCanvas(this.canvas).transform({x:_x , y:_y}, this.tilt , -this.tilt );\n    }\n    setPoint( this.canvas , {x:vec2.x , y:vec2.y} , `rgba(255,255,255)`);\n  }\n\n  //初期値\n  initPointRate( myPoint, index , begin, end ) {\n\n    if ( myPoint.rate ) return;\n\n    //原点をbeginとして補正\n    const _begin = { x:0 , y: 0};\n    const _end = vector.shiftBase( begin , end);\n    const _myPoint = vector.shiftBase( begin ,myPoint.vector);\n    \n    //外積\n    const _crossProduct = vector.crossProduct(_end,_myPoint);\n    const distanceFromEdge = Math.abs(_crossProduct/vector.distance(_begin , _end));//頂点から|begin|endへの距離\n\n    //内積\n    const _dotProduct = vector.dotProduct(_end,_myPoint);// _dotProduct<0 -> 正\n    const cos_theta = vector.theta(_end,_myPoint);\n    const _theta = math.acos(cos_theta);//θ\n    const dotDistance = _theta*vector.vectorLength(_myPoint);//内積 -> 絶対値なので正負の判定を入れる必要がある\n\n    //割合\n    const vec_length = vector.distance(_begin , _end);\n    const rate_vec_point = dotDistance/vec_length;//正しい\n    const rate_from_edge = distanceFromEdge/vec_length;\n    \n    // console.log(\"cos_theta \",\n    //   vector.vectorLength(_end),\n    //   vector.vectorLength(_myPoint) , \n    //   cos_theta ,\n    //   _theta*180.0/Math.PI,\n    //   vector.dotProduct(_end,_myPoint),\n    // );\n\n    //初期値を設定\n    let _points = this.state.points; \n    _points[index].bool = {\n      dot : _dotProduct<0?false:true,\n      cross : _crossProduct<0?true:false,\n    }\n    _points[index].rate = {\n      dot : _dotProduct<0?-rate_vec_point:rate_vec_point,\n      cross : rate_from_edge,\n    }\n    this.setState({\n      points:_points,\n    })\n  }\n\n  //キャンバスをクリア\n  clearCanvas () {\n    const context = this.canvas.getContext(\"2d\");\n    context.clearRect(0, 0, VIDEO_SIZE.width, VIDEO_SIZE.height);\n  }\n\n  //ベースパーツを描画\n  drawPoints (){\n    let index = 0;\n    _.each ( this.props.positions ,  point =>{\n      if(index == BASE_PARTS) {\n        setPoint( this.canvas , {x:point.x , y:point.y} , `rgba(255,0,0)`);\n      }\n      if(index == VECTOR_PARTS) {\n        setPoint( this.canvas , {x:point.x , y:point.y} , `rgba(0,255,0)`);\n      }\n      index++;\n    });\n  }\n\n  //検出したパーツ\n  drawParts () {\n    let landmarks = this.props.landmarks;\n    // パーツごとに色分け\n    const getColor = ( col , index ) =>{\n      let cols = [\n        `rgb(255,${index},${index})`,\n        `rgb(${index},255,${index})`,\n        `rgb(${index},${index},255)`,\n        `rgb(255,255,${index})`,//左目\n        `rgb(${index},255,255)`,//右目\n        `rgb(255,${index},255)`,\n        `rgb(${index},${index},${index})`,\n      ]\n      return cols[col];\n    }\n\n    let col = 0;//パーツインデックス\n    let index = 0;//パーツ内インデックス\n    let step = Math.floor(255/10);//色の段階\n    _.each(landmarks ,( parts , key )=> {\n      col++;\n      index = 0;\n      parts.map ( point => {\n        index++;\n        setPoint( this.canvas , {x:point.x , y:point.y} , getColor(col , index*step ));\n      })\n    })\n    \n  }\n\n  //ポイントを追加\n  addPoint (e) {\n    var rect = this.canvas.getBoundingClientRect();\n    // const x = (rect.width/2)+((rect.width/2) - (e.clientX - rect.left));\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    let _points = this.state.points;\n    _points.push({\n      vector:{x:x,y:y},\n      rate:null,\n    });\n    this.setState({\n      points : _points\n    });\n    console.log(\"points \" , _points );\n  }\n\n  render(){\n    return(\n      <canvas\n        ref={ref => {\n          this.setCanvas(ref);\n        }}\n        width={VIDEO_SIZE.width}\n        height={VIDEO_SIZE.height}\n        className = {styles[\"overlayCanvas\"]}\n        onClick = {(e)=>{\n          this.addPoint(e);\n        }}\n      />\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}